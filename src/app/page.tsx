'use client';

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

const questions = [
  { q: "–ö–∞–∫—É—é —Ä–æ–ª—å —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –∏–≥—Ä–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –±—É–¥—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?", options: ["–¢–æ—Ç, –∫—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –∑–∞–º–µ—Ä—ã", "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —è–¥—Ä–∞", "–°–æ–∑–¥–∞—é, –ø—Ä–æ–µ–∫—Ç–∏—Ä—É—é, –º–∞—Å—à—Ç–∞–±–∏—Ä—É—é", "–•–∏–º–∏—á—É, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è"] },
  { q: "–¢—ã –≤ –ø—É—Å—Ç—ã–Ω–µ –∏ –Ω–∞—Ö–æ–¥–∏—à—å —Å—Ç—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–±–æ—Ä. –ß—Ç–æ –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º —Å–¥–µ–ª–∞–µ—à—å?", options: ["–†–∞–∑–±–µ—Ä—É –∏ —Å–æ–±–µ—Ä—É –∑–∞–Ω–æ–≤–æ", "–ü–æ–¥–∫–ª—é—á—É –∫ –ø–∏—Ç–∞–Ω–∏—é –∏ –ø—Ä–æ–≤–µ—Ä—é –≤—ã—Ö–æ–¥–Ω–æ–π —Å–∏–≥–Ω–∞–ª", "–°–∫–∞–Ω–∏—Ä—É—é –∏ –æ–ø–∏—à—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É", "–ü–æ–ø—Ä–æ–±—É—é –ø–æ–Ω—è—Ç—å, –¥–ª—è —á–µ–≥–æ –æ–Ω –Ω—É–∂–µ–Ω"] },
  { q: "–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–¥–∞—á —Ç–µ–±—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?", options: ["–¢–µ, —á—Ç–æ —Ç—Ä–µ–±—É—é—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∏ —Å—Ö–µ–º", "–¢–µ, –≥–¥–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –±–ª–∏–∂–µ –∫ –∂–∏–≤–æ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É", "–¢–µ, –≥–¥–µ –Ω—É–∂–Ω–∞ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è –∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–¢–µ, –≥–¥–µ —Ä—É–∫–∞–º–∏ –∏ –≥–æ–ª–æ–≤–æ–π ‚Äî –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏"] },
  { q: "–ß—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ —Ç–µ–±–µ –±–ª–∏–∂–µ –ø–æ –¥—É—Ö—É?", options: ["–ü—Ä–∏–¥—É–º–∞—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è", "–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —á–µ–ª–æ–≤–µ–∫–∞", "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤", "–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∏–∫—Ä–æ—Å–∫–æ–ø–∞–º–∏ –∏ –¥–∞—Ç—á–∏–∫–∞–º–∏"] },
  { q: "–¢—ã –ø–æ–ø–∞–ª –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é –º–µ—á—Ç—ã. –¢–∞–º –µ—Å—Ç—å:...", options: ["–ù–∞–±–æ—Ä—ã –ø–ª–∞—Ç, –ø–∞—è–ª—å–Ω–∏–∫–∏ –∏ –æ—Å—Ü–∏–ª–ª–æ–≥—Ä–∞—Ñ", "–ù–∞–Ω–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä", "–†–µ–∞–∫—Ç–æ—Ä—ã, –ø—Ä–æ–±–∏—Ä–∫–∏ –∏ –∑–∞–ø–∞—Ö —Ö–∏–º–∏–∏", "–ö—É—á–∞ –¥–∞–Ω–Ω—ã—Ö, –¥–∞—Ç—á–∏–∫–æ–≤ –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤"] },
  { q: "–í —Ç–µ–±–µ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å. –ö—É–¥–∞ –ø–æ–π–¥—ë—à—å?", options: ["–í —Ä–µ–∞–∫—Ç–æ—Ä–Ω—ã–π –∑–∞–ª ‚Äî —Ç–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "–í –æ–±–ª–∞—Å—Ç—å –±–∏–æ—Å–µ–Ω—Å–æ—Ä–æ–≤ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏", "–ö –ª–∞–∑–µ—Ä–∞–º, –æ–ø—Ç–∏–∫–µ –∏ –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", "–í –Ω–∞–Ω–æ–æ–±—ä–µ–∫—Ç—ã –∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏"] },
  { q: "–¢—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—à—å –ø—Ä–æ–¥—É–∫—Ç. –ß—Ç–æ –≥–ª–∞–≤–Ω–æ–µ?", options: ["–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å, —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å", "–ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –±—É–¥—É—â–µ–µ", "–í–ª–∏—è–Ω–∏–µ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"] },
  { q: "–ö–∞–∫–æ–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ —Ç–µ–±–µ –±–ª–∏–∂–µ?", options: ["–ë–µ–∑ —Ñ–∏–∑–∏–∫–∏ –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–π–º—ë–º", "–ë–µ–∑ —Ö–∏–º–∏–∏ –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ–∑–¥–∞–¥–∏–º", "–ë–µ–∑ –¥–∞–Ω–Ω—ã—Ö –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ —É–∑–Ω–∞–µ–º", "–ë–µ–∑ –∫–æ–Ω—Ç—Ä–æ–ª—è –º—ã –≤—Å—ë –∏—Å–ø–æ—Ä—Ç–∏–º"] },
  { q: "–ß—Ç–æ —Ç—ã —á–∞—â–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å?", options: ["–ü–æ—Ç–æ–∫–∏ –Ω–µ–π—Ç—Ä–æ–Ω–æ–≤ –∏ –∑–∞—â–∏—Ç–Ω—ã–µ –æ–±–æ–ª–æ—á–∫–∏", "–†–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é", "–ü—Ä–æ—Ü–µ—Å—Å –æ—Å–∞–∂–¥–µ–Ω–∏—è –Ω–∞–Ω–æ—á–∞—Å—Ç–∏—Ü", "–ü—Ä–æ–µ–∫—Ç –Ω–æ–≤–æ–≥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"] },
  { q: "–¢–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ –∫–∞–∫ –∏–Ω–∂–µ–Ω–µ—Ä–∞ ‚Äî —ç—Ç–æ...", options: ["–ê–Ω–∞–ª–∏–∑ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å", "–ò–Ω—Ç—É–∏—Ü–∏—è –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ", "–†–µ–∞–∫—Ü–∏–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è", "–ú–∏–∫—Ä–æ–º–∏—Ä –∏ —Å–≤–µ—Ä—Ö—Ç–æ—á–Ω–æ—Å—Ç—å"] }
];

const rules = [
  { keyword: "—Ä–µ–∞–∫—Ç–æ—Ä", direction: "–Ø–¥–µ—Ä–Ω—ã–µ —Ä–µ–∞–∫—Ç–æ—Ä—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" },
  { keyword: "–Ω–µ–π—Ç—Ä–æ–Ω", direction: "–Ø–¥–µ—Ä–Ω—ã–µ —Ñ–∏–∑–∏–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" },
  { keyword: "–æ—Å—Ü–∏–ª–ª–æ–≥—Ä–∞—Ñ", direction: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –Ω–∞–Ω–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" },
  { keyword: "–∂–∏–≤–æ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É", direction: "–ë–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" },
  { keyword: "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", direction: "–ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ —Ñ–∏–∑–∏–∫–∞" },
  { keyword: "–Ω–∞–Ω–æ", direction: "–ù–∞–Ω–æ–∏–Ω–∂–µ–Ω–µ—Ä–∏—è" },
  { keyword: "—Ö–∏–º–∏—è", direction: "–•–∏–º–∏—á–µ—Å–∫–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è" },
  { keyword: "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", direction: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" },
  { keyword: "–∫–æ–Ω—Ç—Ä–æ–ª—å", direction: "–ò–Ω–∂–µ–Ω–µ—Ä–∏—è –Ω–µ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è" },
  { keyword: "–∫–∞—á–µ—Å—Ç–≤–æ", direction: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–æ–º" },
  { keyword: "–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", direction: "–ò–Ω–Ω–æ–≤–∞—Ç–∏–∫–∞" },
  { keyword: "–∞–Ω–∞–ª–∏–∑", direction: "–ò–Ω–∂–µ–Ω–µ—Ä–∏—è –Ω–µ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è" }
];

function predictDirection(answers: string[]): string {
  const text = answers.join(" ").toLowerCase();
  for (const rule of rules) {
    if (text.includes(rule.keyword.toLowerCase())) {
      return rule.direction;
    }
  }
  return "–¢—ã –æ—Å–æ–±–µ–Ω–Ω—ã–π! –ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ—ë –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üòä";
}

export default function QuizApp() {
  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState<string[]>([]);
  const [result, setResult] = useState<string | null>(null);

  const handleAnswer = (answer: string) => {
    const newAnswers = [...answers, answer];
    setAnswers(newAnswers);
    if (step + 1 === questions.length) {
      const prediction = predictDirection(newAnswers);
      setResult(prediction);
    } else {
      setStep(step + 1);
    }
  };

  return (
    <div className="min-h-screen bg-white px-4 py-10 flex items-center justify-center">
      <div className="max-w-2xl w-full">
        <AnimatePresence mode="wait">
          {!result ? (
            <motion.div
              key={step}
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -30 }}
              transition={{ duration: 0.4 }}
              className="bg-gray-100 p-8 rounded-2xl shadow text-center"
            >
              <div className="text-sm text-gray-500 mb-2">
                –í–æ–ø—Ä–æ—Å {step + 1} –∏–∑ {questions.length}
              </div>
              <h2 className="text-2xl md:text-3xl font-semibold mb-6">
                {questions[step].q}
              </h2>
              <div className="grid gap-4">
                {questions[step].options.map((opt, idx) => (
                  <motion.button
                    key={idx}
                    whileTap={{ scale: 0.95, opacity: 0 }}
                    onClick={() => handleAnswer(opt)}
                    className="bg-white border-2 border-gray-300 rounded-xl py-4 px-6 text-lg hover:bg-gray-200 transition"
                  >
                    {opt}
                  </motion.button>
                ))}
              </div>
            </motion.div>
          ) : (
            <motion.div
              key="result"
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.5 }}
              className="bg-yellow-100 p-8 rounded-2xl shadow text-center"
            >
              <h2 className="text-3xl font-bold mb-4">‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç:</h2>
              <p className="text-2xl">{result}</p>
            </motion.div>
          )}
        </AnimatePresence>
      </div>
    </div>
  );
}